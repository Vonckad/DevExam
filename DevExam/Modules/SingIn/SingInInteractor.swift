//
//  SingInInteractor.swift
//  DevExam
//
//  Created by Vlad Ralovich on 7.03.22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SingInBusinessLogic
{
    func doSomething(request: SingIn.Something.Request.RequestType)
}

protocol SingInDataStore
{
  //var name: String { get set }
}

class SingInInteractor: SingInBusinessLogic, SingInDataStore
{
  var presenter: SingInPresentationLogic?
  var worker: SingInWorker?
  //var name: String = ""
  
  // MARK: Do something
  
    func doSomething(request: SingIn.Something.Request.RequestType)
  {
    worker = SingInWorker()
    worker?.doSomeWork()
      
      // переделать под Alamofire
      
      let url = URL(string: "http://dev-exam.l-tech.ru/api/v1/phone_masks")
      URLSession.shared.dataTask(with: URLRequest(url: url!)) { data, response, error in
          do {
              guard let data = data else { return }
              let jsonResult = try JSONDecoder().decode(PhoneMaskModel.self, from: data)
              DispatchQueue.main.async { [weak self] in
                  self?.presenter?.presentSomething(response: .pesentPhoneMask(jsonResult))
              }
          } catch {
              print("ERROR!!!", error)
          }
      }.resume()
  }
}
