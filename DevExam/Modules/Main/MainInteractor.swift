//
//  MainInteractor.swift
//  DevExam
//
//  Created by Vlad Ralovich on 8.03.22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Alamofire

protocol MainBusinessLogic
{
    func doSomething(request: Main.Something.Request.RequestType)
}

protocol MainDataStore
{
  //var name: String { get set }
}

class MainInteractor: MainBusinessLogic, MainDataStore
{
  var presenter: MainPresentationLogic?
  var worker: MainWorker?
  //var name: String = ""
  
  // MARK: Do something
  
    func doSomething(request: Main.Something.Request.RequestType)
  {
    worker = MainWorker()
    worker?.doSomeWork()
    
      switch request {
      case .getList:
          loadList()
      }
  }
    
    private func loadList() {
        AF.request("http://dev-exam.l-tech.ru/api/v1/posts").validate()
            .responseDecodable(of: [ListModel].self) { response in
                switch response.result {
                case .success(let list):
                    self.presenter?.presentSomething(response: .presentList(list))
                case .failure(let error):
                    print("Error load list = \(error)")
                }
            }
    }
}
