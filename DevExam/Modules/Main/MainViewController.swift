//
//  MainViewController.swift
//  DevExam
//
//  Created by Vlad Ralovich on 8.03.22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MainDisplayLogic: AnyObject
{
    func displaySomething(viewModel: Main.Something.ViewModel.viewModelData)
}

class MainViewController: UIViewController, MainDisplayLogic
{
  var interactor: MainBusinessLogic?
  var router: (NSObjectProtocol & MainRoutingLogic & MainDataPassing)?
  var tableView: ListTableView!
  var activityView: UIActivityIndicatorView!
    
  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup()
  {
    let viewController = self
    let interactor = MainInteractor()
    let presenter = MainPresenter()
    let router = MainRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?)
  {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
      
      view.backgroundColor = .white
      self.title = "DevExam"
      
      activityView = UIActivityIndicatorView()
      tableView = ListTableView()
      view.addSubview(tableView)
      view.addSubview(activityView)
      
      tableView.frame = self.view.frame
      tableView.separatorStyle = .none
      tableView.rowHeight = UITableView.automaticDimension
      tableView.estimatedRowHeight = 600
      
      configureActivityView()
      doSomething()
  }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        
    }
  
  // MARK: Do something
  
  //@IBOutlet weak var nameTextField: UITextField!
  
  func doSomething()
  {
      interactor?.doSomething(request: .getList)
      stopActivity(false)
      
  }
  
    func displaySomething(viewModel: Main.Something.ViewModel.viewModelData)
  {
      switch viewModel {
      case .list(let list):
          tableView.cells = list
          tableView.reloadData()
          self.stopActivity(true)
      case .showAlert(let message):
          createAlert(message: message)
      }
  }
    
    private func createAlert(message: String) {
        let alert = UIAlertController(title: "Error", message: message, preferredStyle: .alert)
        alert.addAction(UIAlertAction(title: "Ok", style: .default, handler: { _ in
            self.stopActivity(true)
            self.interactor?.doSomething(request: .getList)
            self.stopActivity(false)
        }))
        present(alert, animated: true)
    }
    
    private func configureActivityView() {
        activityView.translatesAutoresizingMaskIntoConstraints = false
        activityView.centerXAnchor.constraint(equalTo: view.centerXAnchor).isActive = true
        activityView.centerYAnchor.constraint(equalTo: view.centerYAnchor).isActive = true
    }
    
    private func stopActivity(_ bool: Bool) {
        bool ? activityView.stopAnimating() : activityView.startAnimating()
        activityView.isHidden = bool
    }
}
